Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: CLS

; Microsoft Dynamics AX Class: echInventStockQueueBatch unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #echInventStockQueueBatch
    Id 30023
    PROPERTIES
      Name                #echInventStockQueueBatch
      Extends             #RunBaseBatch
      RunOn               #Server
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #autoReserveOpenSalesLines
        #// *** ECHINA - Marijn Catthoor ***
        #// *** Customization Code: ECH_WI_01284
        #// *** Customization Date: 30 Aug 2012
        #// *** Customization Type: Created
        #// *** Description: This method will run through all the saleslines with status InsufficienStock and tries to auto reserve them
        #
        #protected void autoReserveOpenSalesLines()
        #{
        #    salesLine               salesLineSelect;
        #    ;
        #
        #    // loop through all sales lines with insufficient stock
        #    while select salesLineSelect
        #        where salesLineSelect.echReservationStatus == echReservationStatus::InsufficientStock
        #    {
        #
        #        try
        #        {
        #            ttsbegin;
        #
        #            // auto reserve the qty
        #            InventUpd_Reservation::updateReserveBuffer(salesLineSelect, SalesLineSelect.onOrder() * -1);
        #
        #            ttscommit;
        #
        #                        // update the salesline status
        #            echSalesOrder::setSaleslineReservationStatus(salesLineSelect);
        #        }
        #        catch
        #        {
        #            ttsabort;
        #
        #        }
        #
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #canGoBatchJournal
        #// Add ECH_WI_02332 by mengqi.cen on 20130712
        #protected boolean canGoBatchJournal()
        #{
        #;
        #    return true;
        #}
      ENDSOURCE
      SOURCE #caption
        #// *** ECHINA - Anthony Christiaens ***
        #// *** Customization Code: ECH_E_001
        #// *** Customization Date: 21 Mar 2012
        #// *** Customization Type: created
        #// *** Description: set caption
        #
        #public ClassDescription caption()
        #{
        #    ;
        #
        #    return  "@ECH76";
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #// Update ECH_WI_02336 by mengqi.cen on 20130724
        #//   Record Stock Allocation history in Ax table
        #// Update ECH_WI_02332 by mengqi.cen on 20130712
        #//
        #// *** ECHINA - Anthony Christiaens ***
        #// *** Customization Code: ECH_E_001
        #// *** Customization Date: 21 Mar 2012
        #// *** Customization Type: created
        #// *** Description: batch to process echInventStockQueue table
        #
        #class echInventStockQueueBatch extends RunBaseBatch
        #{
        #    DialogField g_FieldIsSetMissingSkuZero;
        #    NoYes       g_IsSetMissingSkuZero;
        #
        #    echInventStockQueueSeqId g_LatestSeqId;
        #
        #    #define.CurrentVersion(1)
        #    #localmacro.CurrentList
        #        g_IsSetMissingSkuZero
        #    #endmacro
        #}
      ENDSOURCE
      SOURCE #dialog
        #// Add ECH_WI_02332 by mengqi.cen on 20130712
        #protected Object dialog(DialogRunbase dialog, boolean forceOnClient)
        #{
        #    dialog _dlg;
        #;
        #    _dlg = super(dialog, forceOnClient);
        #    g_FieldIsSetMissingSkuZero =
        #        _dlg.addFieldValue(typeid(NoYes), g_IsSetMissingSkuZero, "@ECH827", "@ECH828");
        #
        #    return _dlg;
        #}
      ENDSOURCE
      SOURCE #getFromDialog
        #// Add ECH_WI_02332 by mengqi.cen on 20130712
        #public boolean getFromDialog()
        #{
        #    boolean _retVal;
        #;
        #    _retVal = super();
        #    g_IsSetMissingSkuZero = g_FieldIsSetMissingSkuZero.value();
        #
        #    return _retVal;
        #}
      ENDSOURCE
      SOURCE #initParmDefault
        #// Add ECH_WI_02332 by mengqi.cen on 20130712
        #public void initParmDefault()
        #{
        #;
        #    super();
        #
        #    g_IsSetMissingSkuZero = NoYes::No;
        #}
      ENDSOURCE
      SOURCE #InsertWMSMissingSku
        #// Update ECH_WI_02336 by mengqi.cen on 20130726
        #//   Record Stock Allocation history in Ax table
        #// Update ECH_WI_02332 by mengqi.cen on 20130725
        #//   Take out these 'Service' item
        #// Add ECH_WI_02332 by mengqi.cen on 20130712
        #private boolean insertWMSMissingSku()
        #{
        #    RecordInsertList     recInsertList;
        #    echInventStockQueue  echInvStockQueue_I, echInvStockQueue_E; // I: Insert, E: Existing
        #    InventTable          inventTable;
        #    InventItemBarcode    itemBarcode;
        #    InventDim            inventDim;
        #    InventSiteId         invSiteId;
        #    boolean              bSuccess;
        #;
        #    ttsbegin;
        #
        #    select firstonly echInvStockQueue_E
        #      where echInvStockQueue_E.IsFromWMS   == NoYes::Yes
        #         && echInvStockQueue_E.BatchStatus == BatchStatus::Waiting
        #         && echInvStockQueue_E.SeqId       == g_LatestSeqId;
        #
        #    if (echInvStockQueue_E)
        #    {
        #        bSuccess = true;
        #        invSiteId = echInvStockQueue_E.InventSiteId;
        #
        #        recInsertList = new RecordInsertList(tablenum(echInventStockQueue));
        #        while select itemBarcode
        #                where itemBarcode.barcodeSetupId == InventParameters::find().echSkuBarcodeSetup
        #                join           inventDim
        #                  where itemBarcode.inventDimId  == inventDim.inventDimId
        #                exists join inventTable
        #                where itemBarcode.itemId   == inventTable.ItemId
        #                   && inventTable.ItemType != ItemType::Service
        #                notexists join echInvStockQueue_E
        #                where itemBarcode.itemId             == echInvStockQueue_E.ItemId
        #                   && itemBarcode.inventDimId        == echInvStockQueue_E.inventDimId
        #                   && echInvStockQueue_E.IsFromWMS   == NoYes::Yes
        #                   && echInvStockQueue_E.BatchStatus == BatchStatus::Waiting
        #                   && echInvStockQueue_E.SeqId       == g_LatestSeqId
        #        {
        #            echInvStockQueue_I.clear();
        #
        #            echInvStockQueue_I.initValue();
        #            echInvStockQueue_I.SeqId         = g_LatestSeqId;
        #            echInvStockQueue_I.ItemId        = itemBarcode.itemId;
        #            echInvStockQueue_I.inventDimId   = itemBarcode.inventDimId;
        #            echInvStockQueue_I.configId      = inventDim.configId;
        #            echInvStockQueue_I.InventColorId = inventDim.InventColorId;
        #            echInvStockQueue_I.InventSizeId  = inventDim.InventSizeId;
        #            echInvStockQueue_I.InventStyleId = inventDim.InventStyleId;
        #            echInvStockQueue_I.InventSiteId  = invSiteId;
        #            echInvStockQueue_I.Qty           = 0;
        #            echInvStockQueue_I.IsFromWMS     = NoYes::No;
        #
        #            recInsertList.add(echInvStockQueue_I);
        #        }
        #        recInsertList.insertDatabase();
        #    }
        #    else
        #    {
        #        bSuccess = false;
        #        info("@ECH830");
        #    }
        #
        #    ttscommit;
        #
        #    return bSuccess;
        #}
      ENDSOURCE
      SOURCE #lockLatestQueueSeq
        #// Update ECH_WI_02336 by mengqi.cen on 20130724
        #//   Record Stock Allocation history in Ax table
        #private boolean lockLatestQueueSeq()
        #{
        #    echInventStockQueueSeq  invStockQueueSeq;
        #    boolean                 bLocked;
        #;
        #    TTSBegin;
        #
        #    select firstonly forupdate invStockQueueSeq
        #      order by invStockQueueSeq.SeqId desc;
        #
        #    if (invStockQueueSeq.BatchStatus == BatchStatus::Waiting)
        #    {
        #        invStockQueueSeq.BatchStatus = BatchStatus::Finished;
        #        invStockQueueSeq.update();
        #
        #        g_LatestSeqId = invStockQueueSeq.SeqId;
        #        bLocked = true;
        #    }
        #    else
        #    {
        #        bLocked = false;
        #    }
        #
        #    TTSCommit;
        #
        #
        #    return bLocked;
        #}
      ENDSOURCE
      SOURCE #pack
        #// Update ECH_WI_02332 by mengqi.cen on 20130712
        #//
        #// *** ECHINA - Anthony Christiaens ***
        #// *** Customization Code: ECH_E_001
        #// *** Customization Date: 21 Mar 2012
        #// *** Customization Type: created
        #// *** Description: pack
        #
        #public container pack()
        #{
        #    ;
        #
        #    return [#CurrentVersion, #CurrentList];
        #}
      ENDSOURCE
      SOURCE #run
        #// Update ECH_WI_02336 by mengqi.cen on 20130726
        #//   Record Stock Allocation history in Ax table
        #// Update ECH_WI_02335 by mengqi.cen on 20130723
        #//   Refind Stock Allocation Logical - Allocate 0 to a channel if relevant item is not saled in this channel
        #// Update ECH_WI_02332 by mengqi.cen on 20130713
        #//
        #// *** ECHINA - Marijn Catthoor ***
        #// *** Customization Code: ECH_WI_01284
        #// *** Customization Date: 30 Aug 2012
        #// *** Customization Type: Modified
        #// *** Description: rerun auto reservation for the open salesLines after updating the stock
        #
        #// *** ECHINA - Anthony Christiaens ***
        #// *** Customization Code: ECH_E_001
        #// *** Customization Date: 21 Mar 2012
        #// *** Customization Type: created
        #// *** Description: process queue lines
        #
        #void run()
        #{
        #    echInventStockQueue             echInventStockQueue;
        #    SysInfologEnumerator            sysInfologEnumerator;
        #    SysInfoLogStr                   errorMessage;
        #    echStockAllocRuleCache          allocRuleCache;
        #    ;
        #
        #    if (!this.lockLatestQueueSeq())
        #    {
        #        info("@ECH830");
        #        warning(strFmt("@ECH829", "@ECH76"));
        #    }
        #    else
        #    {
        #        if (g_IsSetMissingSkuZero)
        #            this.insertWMSMissingSku();
        #
        #        // set all records executing
        #        update_recordset echInventStockQueue
        #            setting BatchStatus = BatchStatus::Executing
        #            where echInventStockQueue.BatchStatus == BatchStatus::Waiting
        #               && echInventStockQueue.SeqId       == g_LatestSeqId;
        #
        #        allocRuleCache = echStockAllocRuleCache::construct();
        #        allocRuleCache.init();
        #
        #        // loop executing records queue
        #        while select echInventStockQueue
        #            where echInventStockQueue.BatchStatus == BatchStatus::Executing
        #               && echInventStockQueue.SeqId       == g_LatestSeqId
        #        {
        #            if (echInventStockQueue)
        #            {
        #                try
        #                {
        #                    ttsbegin;
        #
        #                    // process line
        #                    echInventStockQueue.AllocStartDateTime = DateTimeUtil::utcNow();
        #                    echWMSOnlineCountingServer::constructOnHandItemAllocation(echInventStockQueue.ItemId,
        #                                                                              echInventStockQueue.Qty,
        #                                                                              echInventStockQueue.inventDimCriteria(),
        #                                                                              g_LatestSeqId,
        #                                                                              allocRuleCache).run();
        #
        #                    // clean up line after process
        #                    echInventStockQueue.setStatus(BatchStatus::Finished);
        #
        #                    ttscommit;
        #                }
        #                catch
        #                {
        #                    ttsabort;
        #                    errorMessage         = "";
        #                    sysInfologEnumerator = SysInfologEnumerator::newData(infoLog.infologData());
        #                    while (sysInfologEnumerator.moveNext())
        #                    {
        #                        errorMessage += strfmt('%1 \r\n', sysInfologEnumerator.currentMessage());
        #                    }
        #
        #
        #                    // update the echInventStockQueueUpdate record
        #                    echInventStockQueue.setStatus(BatchStatus::Error, errorMessage);
        #                }
        #            }
        #        }
        #
        #// CS - ECH_WI_01284 - Marijn Catthoor - 30 Aug 2012
        #
        #        // Try to auto reserve the saleslines that aren't reserved yet
        #        this.autoReserveOpenSalesLines();
        #
        #// CE - ECH_WI_01284 - Marijn Catthoor - 30 Aug 2012
        #    }
        #}
      ENDSOURCE
      SOURCE #unpack
        #// Update ECH_WI_02332 by mengqi.cen on 20130712
        #//
        #// *** ECHINA - Anthony Christiaens ***
        #// *** Customization Code: ECH_E_001
        #// *** Customization Date: 21 Mar 2012
        #// *** Customization Type: created
        #// *** Description: unpack
        #
        #public boolean unpack(container packedClass)
        #{
        #    int     _version;
        #    boolean _retVal;
        #;
        #    _version = RunBase::getVersion(packedClass);
        #
        #    switch (_version)
        #    {
        #        case #CurrentVersion :
        #            [_version, #CurrentList] = packedClass;
        #            _retVal = true;
        #            break;
        #        default :
        #            _retVal = false;
        #            break;
        #    }
        #
        #    return _retVal;
        #}
      ENDSOURCE
      SOURCE #construct
        #// *** ECHINA - Anthony Christiaens ***
        #// *** Customization Code: ECH_E_001
        #// *** Customization Date: 21 Mar 2012
        #// *** Customization Type: created
        #// *** Description: construct
        #
        #public static echInventStockQueueBatch construct()
        #{
        #    ;
        #
        #    return new echInventStockQueueBatch();
        #}
      ENDSOURCE
      SOURCE #description
        #// Add ECH_WI_02332 by mengqi.cen on 20130712
        #static ClassDescription description()
        #{
        #;
        #    return "@ECH76";
        #}
      ENDSOURCE
      SOURCE #Main
        #// *** ECHINA - Anthony Christiaens ***
        #// *** Customization Code: ECH_E_001
        #// *** Customization Date: 21 Mar 2012
        #// *** Customization Type: created
        #// *** Description: main
        #
        #public static void Main(Args _args)
        #{
        #    echInventStockQueueBatch   echInventStockQueueBatch = echInventStockQueueBatch::construct();
        #    ;
        #
        #    if (echInventStockQueueBatch.prompt())
        #        echInventStockQueueBatch.run();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: END
